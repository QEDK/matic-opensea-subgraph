// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class fills extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save fills entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save fills entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("fills", id.toString(), this);
  }

  static load(id: string): fills | null {
    return store.get("fills", id) as fills | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get makerAddress(): string {
    let value = this.get("makerAddress");
    return value.toString();
  }

  set makerAddress(value: string) {
    this.set("makerAddress", Value.fromString(value));
  }

  get feeRecipientAddress(): string {
    let value = this.get("feeRecipientAddress");
    return value.toString();
  }

  set feeRecipientAddress(value: string) {
    this.set("feeRecipientAddress", Value.fromString(value));
  }

  get takerAddress(): string {
    let value = this.get("takerAddress");
    return value.toString();
  }

  set takerAddress(value: string) {
    this.set("takerAddress", Value.fromString(value));
  }

  get senderAddress(): string {
    let value = this.get("senderAddress");
    return value.toString();
  }

  set senderAddress(value: string) {
    this.set("senderAddress", Value.fromString(value));
  }

  get makerFilledAmount(): BigInt {
    let value = this.get("makerFilledAmount");
    return value.toBigInt();
  }

  set makerFilledAmount(value: BigInt) {
    this.set("makerFilledAmount", Value.fromBigInt(value));
  }

  get takerFilledAmount(): BigInt {
    let value = this.get("takerFilledAmount");
    return value.toBigInt();
  }

  set takerFilledAmount(value: BigInt) {
    this.set("takerFilledAmount", Value.fromBigInt(value));
  }

  get makerFee(): BigInt {
    let value = this.get("makerFee");
    return value.toBigInt();
  }

  set makerFee(value: BigInt) {
    this.set("makerFee", Value.fromBigInt(value));
  }

  get takerFee(): BigInt {
    let value = this.get("takerFee");
    return value.toBigInt();
  }

  set takerFee(value: BigInt) {
    this.set("takerFee", Value.fromBigInt(value));
  }

  get orderHash(): string {
    let value = this.get("orderHash");
    return value.toString();
  }

  set orderHash(value: string) {
    this.set("orderHash", Value.fromString(value));
  }

  get makerAssetData(): string {
    let value = this.get("makerAssetData");
    return value.toString();
  }

  set makerAssetData(value: string) {
    this.set("makerAssetData", Value.fromString(value));
  }

  get takerAssetData(): string {
    let value = this.get("takerAssetData");
    return value.toString();
  }

  set takerAssetData(value: string) {
    this.set("takerAssetData", Value.fromString(value));
  }
}
